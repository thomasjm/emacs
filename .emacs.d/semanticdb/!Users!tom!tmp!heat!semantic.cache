;; Object heat/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "heat/"
  :tables (list 
   (semanticdb-table "index.htm"
    :major-mode 'html-mode
    :tags 
        '( ("Here is the chart:" section nil nil [52 136])
            ("var getBucketValueFunction = function() {
        return function(d) {
            return (d.bucket.start + d.bucket.end) / 2;
        };
    };


    var getDataSeriesIdFunction = function() {
    return function() { return ''; };
    };

    var getDataSeriesNameFunction = function() {
    return function() { return ''; };
    };

    var getValueStringFunction = function() {
        var format = getValueFormatFunction();
        return function(d) {
            return format(d.value);
        };
    };

    var getValueFormatFunction = function() {
        return d3.format(',.4r');
    };

    var getColorFunction = function() {
        return function(d) {
            return \"#74AECC\";
        };
    };



    var getBucketNameFormatFunction = function() {
            return function(num) {
                return num;
            };
    };

            selector = d3.select(\"div\").append('svg');


    var q = {
                getId: function() { return 'asdf'; },
                getColor: function() { return '#3366FF'; }
            };

            chartBuilder = px.charts.heatMap()
                .nodes([
                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 1,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 2,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 3,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 4,

                        query: q
                    }
                ])

                .dataSeriesId(getDataSeriesIdFunction())
                // .dataSeriesName(getDataSeriesNameFunction())
                .dataSeriesName(function(d) { return 'asdf'; })

                .color(getColorFunction())

                .XAxisTitle(\"X AXIS\")
                .YAxisTitle(\"Y AXIS\")

                .indepFormat(getBucketNameFormatFunction())
                .maxWidth(600)
                .maxHeight(600);

    var chart = chartBuilder(selector);

            selector.attr('width', 1000)
            .attr('height', 1000);" section nil nil [136 186])
            ("var getBucketValueFunction = function() {
        return function(d) {
            return (d.bucket.start + d.bucket.end) / 2;
        };
    };


    var getDataSeriesIdFunction = function() {
    return function() { return ''; };
    };

    var getDataSeriesNameFunction = function() {
    return function() { return ''; };
    };

    var getValueStringFunction = function() {
        var format = getValueFormatFunction();
        return function(d) {
            return format(d.value);
        };
    };

    var getValueFormatFunction = function() {
        return d3.format(',.4r');
    };

    var getColorFunction = function() {
        return function(d) {
            return \"#74AECC\";
        };
    };



    var getBucketNameFormatFunction = function() {
            return function(num) {
                return num;
            };
    };

            selector = d3.select(\"div\").append('svg');


    var q = {
                getId: function() { return 'asdf'; },
                getColor: function() { return '#3366FF'; }
            };

            chartBuilder = px.charts.heatMap()
                .nodes([
                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 1,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 2,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 3,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 4,

                        query: q
                    }
                ])

                .dataSeriesId(getDataSeriesIdFunction())
                // .dataSeriesName(getDataSeriesNameFunction())
                .dataSeriesName(function(d) { return 'asdf'; })

                .color(getColorFunction())

                .XAxisTitle(\"X AXIS\")
                .YAxisTitle(\"Y AXIS\")

                .indepFormat(getBucketNameFormatFunction())
                .maxWidth(600)
                .maxHeight(600);

    var chart = chartBuilder(selector);

            selector.attr('width', 1000)
            .attr('height', 1000);" section nil nil [186 226])
            ("var getBucketValueFunction = function() {
        return function(d) {
            return (d.bucket.start + d.bucket.end) / 2;
        };
    };


    var getDataSeriesIdFunction = function() {
    return function() { return ''; };
    };

    var getDataSeriesNameFunction = function() {
    return function() { return ''; };
    };

    var getValueStringFunction = function() {
        var format = getValueFormatFunction();
        return function(d) {
            return format(d.value);
        };
    };

    var getValueFormatFunction = function() {
        return d3.format(',.4r');
    };

    var getColorFunction = function() {
        return function(d) {
            return \"#74AECC\";
        };
    };



    var getBucketNameFormatFunction = function() {
            return function(num) {
                return num;
            };
    };

            selector = d3.select(\"div\").append('svg');


    var q = {
                getId: function() { return 'asdf'; },
                getColor: function() { return '#3366FF'; }
            };

            chartBuilder = px.charts.heatMap()
                .nodes([
                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 1,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 2,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 3,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 4,

                        query: q
                    }
                ])

                .dataSeriesId(getDataSeriesIdFunction())
                // .dataSeriesName(getDataSeriesNameFunction())
                .dataSeriesName(function(d) { return 'asdf'; })

                .color(getColorFunction())

                .XAxisTitle(\"X AXIS\")
                .YAxisTitle(\"Y AXIS\")

                .indepFormat(getBucketNameFormatFunction())
                .maxWidth(600)
                .maxHeight(600);

    var chart = chartBuilder(selector);

            selector.attr('width', 1000)
            .attr('height', 1000);" section nil nil [226 267])
            ("var getBucketValueFunction = function() {
        return function(d) {
            return (d.bucket.start + d.bucket.end) / 2;
        };
    };


    var getDataSeriesIdFunction = function() {
    return function() { return ''; };
    };

    var getDataSeriesNameFunction = function() {
    return function() { return ''; };
    };

    var getValueStringFunction = function() {
        var format = getValueFormatFunction();
        return function(d) {
            return format(d.value);
        };
    };

    var getValueFormatFunction = function() {
        return d3.format(',.4r');
    };

    var getColorFunction = function() {
        return function(d) {
            return \"#74AECC\";
        };
    };



    var getBucketNameFormatFunction = function() {
            return function(num) {
                return num;
            };
    };

            selector = d3.select(\"div\").append('svg');


    var q = {
                getId: function() { return 'asdf'; },
                getColor: function() { return '#3366FF'; }
            };

            chartBuilder = px.charts.heatMap()
                .nodes([
                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 1,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 2,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 3,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 4,

                        query: q
                    }
                ])

                .dataSeriesId(getDataSeriesIdFunction())
                // .dataSeriesName(getDataSeriesNameFunction())
                .dataSeriesName(function(d) { return 'asdf'; })

                .color(getColorFunction())

                .XAxisTitle(\"X AXIS\")
                .YAxisTitle(\"Y AXIS\")

                .indepFormat(getBucketNameFormatFunction())
                .maxWidth(600)
                .maxHeight(600);

    var chart = chartBuilder(selector);

            selector.attr('width', 1000)
            .attr('height', 1000);" section nil nil [267 307])
            ("var getBucketValueFunction = function() {
        return function(d) {
            return (d.bucket.start + d.bucket.end) / 2;
        };
    };


    var getDataSeriesIdFunction = function() {
    return function() { return ''; };
    };

    var getDataSeriesNameFunction = function() {
    return function() { return ''; };
    };

    var getValueStringFunction = function() {
        var format = getValueFormatFunction();
        return function(d) {
            return format(d.value);
        };
    };

    var getValueFormatFunction = function() {
        return d3.format(',.4r');
    };

    var getColorFunction = function() {
        return function(d) {
            return \"#74AECC\";
        };
    };



    var getBucketNameFormatFunction = function() {
            return function(num) {
                return num;
            };
    };

            selector = d3.select(\"div\").append('svg');


    var q = {
                getId: function() { return 'asdf'; },
                getColor: function() { return '#3366FF'; }
            };

            chartBuilder = px.charts.heatMap()
                .nodes([
                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 1,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 2,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 3,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 4,

                        query: q
                    }
                ])

                .dataSeriesId(getDataSeriesIdFunction())
                // .dataSeriesName(getDataSeriesNameFunction())
                .dataSeriesName(function(d) { return 'asdf'; })

                .color(getColorFunction())

                .XAxisTitle(\"X AXIS\")
                .YAxisTitle(\"Y AXIS\")

                .indepFormat(getBucketNameFormatFunction())
                .maxWidth(600)
                .maxHeight(600);

    var chart = chartBuilder(selector);

            selector.attr('width', 1000)
            .attr('height', 1000);" section nil nil [307 352])
            ("var getBucketValueFunction = function() {
        return function(d) {
            return (d.bucket.start + d.bucket.end) / 2;
        };
    };


    var getDataSeriesIdFunction = function() {
    return function() { return ''; };
    };

    var getDataSeriesNameFunction = function() {
    return function() { return ''; };
    };

    var getValueStringFunction = function() {
        var format = getValueFormatFunction();
        return function(d) {
            return format(d.value);
        };
    };

    var getValueFormatFunction = function() {
        return d3.format(',.4r');
    };

    var getColorFunction = function() {
        return function(d) {
            return \"#74AECC\";
        };
    };



    var getBucketNameFormatFunction = function() {
            return function(num) {
                return num;
            };
    };

            selector = d3.select(\"div\").append('svg');


    var q = {
                getId: function() { return 'asdf'; },
                getColor: function() { return '#3366FF'; }
            };

            chartBuilder = px.charts.heatMap()
                .nodes([
                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 1,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 2,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 3,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 4,

                        query: q
                    }
                ])

                .dataSeriesId(getDataSeriesIdFunction())
                // .dataSeriesName(getDataSeriesNameFunction())
                .dataSeriesName(function(d) { return 'asdf'; })

                .color(getColorFunction())

                .XAxisTitle(\"X AXIS\")
                .YAxisTitle(\"Y AXIS\")

                .indepFormat(getBucketNameFormatFunction())
                .maxWidth(600)
                .maxHeight(600);

    var chart = chartBuilder(selector);

            selector.attr('width', 1000)
            .attr('height', 1000);" section nil nil [352 392])
            ("var getBucketValueFunction = function() {
        return function(d) {
            return (d.bucket.start + d.bucket.end) / 2;
        };
    };


    var getDataSeriesIdFunction = function() {
    return function() { return ''; };
    };

    var getDataSeriesNameFunction = function() {
    return function() { return ''; };
    };

    var getValueStringFunction = function() {
        var format = getValueFormatFunction();
        return function(d) {
            return format(d.value);
        };
    };

    var getValueFormatFunction = function() {
        return d3.format(',.4r');
    };

    var getColorFunction = function() {
        return function(d) {
            return \"#74AECC\";
        };
    };



    var getBucketNameFormatFunction = function() {
            return function(num) {
                return num;
            };
    };

            selector = d3.select(\"div\").append('svg');


    var q = {
                getId: function() { return 'asdf'; },
                getColor: function() { return '#3366FF'; }
            };

            chartBuilder = px.charts.heatMap()
                .nodes([
                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 1,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 2,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 3,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 4,

                        query: q
                    }
                ])

                .dataSeriesId(getDataSeriesIdFunction())
                // .dataSeriesName(getDataSeriesNameFunction())
                .dataSeriesName(function(d) { return 'asdf'; })

                .color(getColorFunction())

                .XAxisTitle(\"X AXIS\")
                .YAxisTitle(\"Y AXIS\")

                .indepFormat(getBucketNameFormatFunction())
                .maxWidth(600)
                .maxHeight(600);

    var chart = chartBuilder(selector);

            selector.attr('width', 1000)
            .attr('height', 1000);" section nil nil [392 438])
            ("var getBucketValueFunction = function() {
        return function(d) {
            return (d.bucket.start + d.bucket.end) / 2;
        };
    };


    var getDataSeriesIdFunction = function() {
    return function() { return ''; };
    };

    var getDataSeriesNameFunction = function() {
    return function() { return ''; };
    };

    var getValueStringFunction = function() {
        var format = getValueFormatFunction();
        return function(d) {
            return format(d.value);
        };
    };

    var getValueFormatFunction = function() {
        return d3.format(',.4r');
    };

    var getColorFunction = function() {
        return function(d) {
            return \"#74AECC\";
        };
    };



    var getBucketNameFormatFunction = function() {
            return function(num) {
                return num;
            };
    };

            selector = d3.select(\"div\").append('svg');


    var q = {
                getId: function() { return 'asdf'; },
                getColor: function() { return '#3366FF'; }
            };

            chartBuilder = px.charts.heatMap()
                .nodes([
                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 1,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 2,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 3,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 4,

                        query: q
                    }
                ])

                .dataSeriesId(getDataSeriesIdFunction())
                // .dataSeriesName(getDataSeriesNameFunction())
                .dataSeriesName(function(d) { return 'asdf'; })

                .color(getColorFunction())

                .XAxisTitle(\"X AXIS\")
                .YAxisTitle(\"Y AXIS\")

                .indepFormat(getBucketNameFormatFunction())
                .maxWidth(600)
                .maxHeight(600);

    var chart = chartBuilder(selector);

            selector.attr('width', 1000)
            .attr('height', 1000);" section nil nil [438 482])
            ("var getBucketValueFunction = function() {
        return function(d) {
            return (d.bucket.start + d.bucket.end) / 2;
        };
    };


    var getDataSeriesIdFunction = function() {
    return function() { return ''; };
    };

    var getDataSeriesNameFunction = function() {
    return function() { return ''; };
    };

    var getValueStringFunction = function() {
        var format = getValueFormatFunction();
        return function(d) {
            return format(d.value);
        };
    };

    var getValueFormatFunction = function() {
        return d3.format(',.4r');
    };

    var getColorFunction = function() {
        return function(d) {
            return \"#74AECC\";
        };
    };



    var getBucketNameFormatFunction = function() {
            return function(num) {
                return num;
            };
    };

            selector = d3.select(\"div\").append('svg');


    var q = {
                getId: function() { return 'asdf'; },
                getColor: function() { return '#3366FF'; }
            };

            chartBuilder = px.charts.heatMap()
                .nodes([
                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 1,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 1,
                            end1: 2,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 2,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 5000,
                            end2: 10000
                        },

                        value: 3,

                        query: q
                    },

                    {
                        bucket: {
                            start1: 2,
                            end1: 3,

                            start2: 10000,
                            end2: 15000
                        },

                        value: 4,

                        query: q
                    }
                ])

                .dataSeriesId(getDataSeriesIdFunction())
                // .dataSeriesName(getDataSeriesNameFunction())
                .dataSeriesName(function(d) { return 'asdf'; })

                .color(getColorFunction())

                .XAxisTitle(\"X AXIS\")
                .YAxisTitle(\"Y AXIS\")

                .indepFormat(getBucketNameFormatFunction())
                .maxWidth(600)
                .maxHeight(600);

    var chart = chartBuilder(selector);

            selector.attr('width', 1000)
            .attr('height', 1000);" section nil nil [482 3572]))          
    :file "index.htm"
    :pointmax 3572
    :fsize 3571
    :lastmodtime '(21327 2424 0 0)
    :unmatched-syntax 'nil
    )
   )
  :file "!Users!tom!tmp!heat!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
