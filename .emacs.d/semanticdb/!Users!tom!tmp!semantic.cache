;; Object tmp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "tmp/"
  :tables (list 
   (semanticdb-table "generate_tests.py"
    :major-mode 'python-mode
    :tags 
        '( ("fileinput" include nil nil [26 42])
            ("re" include nil nil [43 52])
            ("json" include nil nil [53 64])
            ("collections" include nil nil [65 96])
            ("hashabledict" type
               (:superclasses ("dict")
                :members 
                  ( ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [143 147]))                          )
                        (reparse-symbol indented_block_body) [130 199]))                  
                :type "class")
                nil [100 199])
            ("uniquify_dicts" function (:arguments 
              ( ("dicts" variable nil (reparse-symbol function_parameters) [220 225])
                ("id_key" variable nil (reparse-symbol function_parameters) [227 233]))              ) nil [201 285])
            ("s" variable nil nil [286 316])
            ("raw_tests" variable nil nil [318 379])
            ("find_field" function (:arguments 
              ( ("raw_test" variable nil (reparse-symbol function_parameters) [396 404])
                ("field_name" variable nil (reparse-symbol function_parameters) [406 416]))              ) nil [381 667])
            ("tests" variable nil nil [668 678])
            ("fields" variable nil nil [679 749])
            ("for" code nil nil [751 853])
            ("tests" variable nil nil [854 892])
            ("c" variable nil nil [894 907])
            ("all_suggestion_lists" variable nil nil [909 934])
            ("counts" variable nil nil [935 946])
            ("for" code nil nil [948 1238])
            ("frequent_suggestions" variable nil nil [1239 1323])
            ("for" code nil nil [1325 1560])
            ("StringIO" include nil nil [1562 1577])
            ("f" variable nil nil [1578 1601])
            ("f" code nil nil [1603 1792])
            ("for" code nil nil [1794 1904])
            ("f" code nil nil [1905 1920])
            ("f" code nil nil [1921 1947])
            ("f" code nil nil [1948 2024])
            ("f" code nil nil [2025 2037])
            ("f" code nil nil [2038 2053])
            ("f" code nil nil [2054 2081])
            ("f" code nil nil [2083 2096])
            ("f" code nil nil [2097 2110])
            ("print" code nil nil [2112 2131]))          
    :file "generate_tests.py"
    :pointmax 2705
    :fsize 2704
    :lastmodtime '(21338 56540 0 0)
    :unmatched-syntax '((INDENT_BLOCK 2185 . 2687))
    )
   (semanticdb-table "json_split.py"
    :major-mode 'python-mode
    :tags 
        '( ("json" include nil nil [2 22])
            ("sys" include nil nil [2 22])
            ("os" include nil nil [2 22])
            ("json.decoder" include nil nil [24 59])
            ("open_json_file" function (:arguments 
              ( ("output_folder" variable nil (reparse-symbol function_parameters) [80 93])
                ("counter" variable nil (reparse-symbol function_parameters) [95 102]))              ) nil [61 245])
            ("process_json" function (:arguments 
              ( ("all_json" variable nil (reparse-symbol function_parameters) [263 271])
                ("output_folder" variable nil (reparse-symbol function_parameters) [273 286])
                ("max_bytes_per_file" variable nil (reparse-symbol function_parameters) [288 306]))              ) nil [246 957])
            ("if" code nil nil [958 1183])
            ("all_json" variable nil nil [1184 1239]))          
    :file "json_split.py"
    :pointmax 1240
    :fsize 117
    :lastmodtime '(21363 50660 0 0)
    :unmatched-syntax '((INDENT_BLOCK 985 . 1183) (NEWLINE 984 . 985) (COLON 983 . 984) (STRING_LITERAL 973 . 983) (EQ 970 . 972) (IF 958 . 960) (INDENT_BLOCK 310 . 957) (NEWLINE 308 . 309) (COLON 307 . 308) (PAREN_BLOCK 262 . 307) (DEF 246 . 249) (INDENT_BLOCK 105 . 245) (NEWLINE 104 . 105) (COLON 103 . 104) (PAREN_BLOCK 79 . 103) (DEF 61 . 64) (NEWLINE 59 . 60))
    )
   )
  :file "!Users!tom!tmp!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
